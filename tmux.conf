# $Id: vim-keys.conf,v 1.2 2010-09-18 09:36:15 nicm Exp $
#
# vim-keys.conf, v1.2 2010/09/12
#
# By Daniel Thau.  Public domain.
#
# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind b split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi

# vim color(when set "screen-256color", window name on status bar and title bar is not applied)
set -g default-terminal "tmux-256color"

# scrollback buffer to 10000 lines
set -g history-limit 10000

# override terminal emulator settings
set -ga terminal-overrides ',xterm*:smcup@:rmcup@'
set -ga terminal-override ',rxvt-uni*:XT:Ms=\E]52;%p1%s;%p2%s\007'

# set title
set-option -g set-titles on
set-option -g set-titles-string '[#I] #S@#H #T'

# vim-like key bind
unbind p
bind p paste-buffer
#bind-key -Tcopy-mode-vi 'v' send -X begin-selection
#bind-key -Tcopy-mode-vi 'y' send -X copy-selection

# emulate xterm key
#set-option -g xterm-keys on

# Prefix
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Easy config reload
bind-key r source-file ~/.tmux.conf

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Allow the arrow key to be used immediately after changing windows.
set-option -g repeat-time 0

# No delay for escape key press
set -sg escape-time 0

# Shift arrow to switch windows
bind -n S-Left previous-window
bind -n S-Right next-window

# Set the base-index to 1 rather than 0
#set -g base-index 1
#set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# Automatically set window title
#set-window-option -g automatic-rename on
#set-option -g set-titles on
# mouse scroll up/down
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M; send-keys -M; send-keys -M; send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M; send-keys -M; send-keys -M; send-keys -M' 'copy-mode -e; send-keys -M; send-keys -M; send-keys -M; send-keys -M'"
bind -n WheelDownPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M; send-keys -M; send-keys -M; send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M; send-keys -M; send-keys -M; send-keys -M' 'copy-mode -e; send-keys -M; send-keys -M; send-keys -M; send-keys -M'"
#bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
#bind -Tcopy-mode-vi C-WheelUpPane   send -N5 -X halfpage-up
#bind -Tcopy-mode-vi C-WheelDownPane send -N5 -X halfpage-down
# pane movement
bind-key s command-prompt -p "join pane source"  "join-pane -s '%%'"
bind-key t command-prompt -p "send pane to"  "join-pane -t '%%'"

